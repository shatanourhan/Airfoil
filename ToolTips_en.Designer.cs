//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BezierAirfoilDesigner.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ToolTips_en {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ToolTips_en() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BezierAirfoilDesigner.Properties.ToolTips_en", typeof(ToolTips_en).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically search for well-fitting control points for both curves.
        ///Three other points per control point are recursively tried.
        ///The search distance is Error / 50 (vertical only).
        ///If no better points are found, four other points per control point are tried, and so on.
        ///If the improvement through different control point positions is less than 10%,
        ///the degree of the curve is increased by 1.
        ///Then search again.
        ///This continues until the error is less than 0.075.
        ///The search can be interrupted with the sto [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string btnAutoSearch {
            get {
                return ResourceManager.GetString("btnAutoSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resets the Zoom to fit Data. ähnelt.
        /// </summary>
        internal static string btnAxisAuto {
            get {
                return ResourceManager.GetString("btnAxisAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrease the order of the bottom bezier curve while preserving the shape. ähnelt.
        /// </summary>
        internal static string btnDecreaseOrderBottom {
            get {
                return ResourceManager.GetString("btnDecreaseOrderBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrease the order of the top bezier curve while preserving the shape. ähnelt.
        /// </summary>
        internal static string btnDecreaseOrderTop {
            get {
                return ResourceManager.GetString("btnDecreaseOrderTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load the default control points. ähnelt.
        /// </summary>
        internal static string btnDefault {
            get {
                return ResourceManager.GetString("btnDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increase the order of the bottom bezier curve while preserving the shape. ähnelt.
        /// </summary>
        internal static string btnIncreaseOrderBottom {
            get {
                return ResourceManager.GetString("btnIncreaseOrderBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increase the order of the top bezier curve while preserving the shape. ähnelt.
        /// </summary>
        internal static string btnIncreaseOrderTop {
            get {
                return ResourceManager.GetString("btnIncreaseOrderTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load control points from a .bez file. ähnelt.
        /// </summary>
        internal static string btnLoadBez {
            get {
                return ResourceManager.GetString("btnLoadBez", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load control points from a .bez.dat file. ähnelt.
        /// </summary>
        internal static string btnLoadBezDat {
            get {
                return ResourceManager.GetString("btnLoadBezDat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load a reference airfoil from a .dat file. Right-click to remove the reference airfoil. ähnelt.
        /// </summary>
        internal static string btnLoadDat {
            get {
                return ResourceManager.GetString("btnLoadDat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save the current control points as a .bez file.
        ///The formatting differs from normal .dat files.
        ///The control points at the LE and TE don&apos;t have to be identical for the top and bottom curves.
        ///This allows the definition of other geometry as bezier curves, for example, the wing planform.
        ///Currently, this is not supported by other software, but theoretically it is a better file type.
        ///File format example:
        ///
        ///Airfoil Name
        ///Top Start
        ///0.00000000 0.00000000
        ///0.00000000 0.15000000
        ///0.50000000 0.15000000
        ///1.0000000 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string btnSaveBez {
            get {
                return ResourceManager.GetString("btnSaveBez", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save the current control points as a .bez.dat file.
        ///The formatting is identical to normal .dat files.
        ///This allows the control points to be easily loaded into most other programs.
        ///File format example:
        ///
        ///Airfoil Name
        ///1.00000000 0.00000000
        ///0.50000000 0.15000000
        ///0.00000000 0.15000000
        ///0.00000000 0.00000000
        ///0.00000000 -0.10000000
        ///0.50000000 -0.10000000
        ///1.00000000 0.00000000 ähnelt.
        /// </summary>
        internal static string btnSaveBezDat {
            get {
                return ResourceManager.GetString("btnSaveBezDat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save the current curves as a .dat file. ähnelt.
        /// </summary>
        internal static string btnSaveDat {
            get {
                return ResourceManager.GetString("btnSaveDat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search for better control points for the bottom curve.
        ///
        ///Right click to do a single search. ähnelt.
        /// </summary>
        internal static string btnSearchBottom {
            get {
                return ResourceManager.GetString("btnSearchBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search for better control points for the top curve.
        ///
        ///Right click to do a single search. ähnelt.
        /// </summary>
        internal static string btnSearchTop {
            get {
                return ResourceManager.GetString("btnSearchTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start a Particle Swarm Optimization for the bottom curve. ähnelt.
        /// </summary>
        internal static string btnStartPSOBottom {
            get {
                return ResourceManager.GetString("btnStartPSOBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start a Particle Swarm Optimization for the top curve. ähnelt.
        /// </summary>
        internal static string btnStartPSOTop {
            get {
                return ResourceManager.GetString("btnStartPSOTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stop the currently running search. ähnelt.
        /// </summary>
        internal static string btnStopSearch {
            get {
                return ResourceManager.GetString("btnStopSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show or hide the bottom curve. ähnelt.
        /// </summary>
        internal static string chkShowBottom {
            get {
                return ResourceManager.GetString("chkShowBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show or hide the camber line. ähnelt.
        /// </summary>
        internal static string chkShowCamber {
            get {
                return ResourceManager.GetString("chkShowCamber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show or hide the control points for the bottom curve. ähnelt.
        /// </summary>
        internal static string chkShowControlBottom {
            get {
                return ResourceManager.GetString("chkShowControlBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show or hide the control points for the top curve. ähnelt.
        /// </summary>
        internal static string chkShowControlTop {
            get {
                return ResourceManager.GetString("chkShowControlTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show or hide the leading edge radius. ähnelt.
        /// </summary>
        internal static string chkShowRadius {
            get {
                return ResourceManager.GetString("chkShowRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show or hide the bottom of the reference airfoil. ähnelt.
        /// </summary>
        internal static string chkShowReferenceBottom {
            get {
                return ResourceManager.GetString("chkShowReferenceBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show or hide the top of the reference airfoil. ähnelt.
        /// </summary>
        internal static string chkShowReferenceTop {
            get {
                return ResourceManager.GetString("chkShowReferenceTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show or hide the thickness distribution. ähnelt.
        /// </summary>
        internal static string chkShowThickness {
            get {
                return ResourceManager.GetString("chkShowThickness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show or hide the top curve. ähnelt.
        /// </summary>
        internal static string chkShowTop {
            get {
                return ResourceManager.GetString("chkShowTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the position at which the camber line is calculated. ähnelt.
        /// </summary>
        internal static string txtCamberPosition {
            get {
                return ResourceManager.GetString("txtCamberPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the step size at which the camber line is calculated. ähnelt.
        /// </summary>
        internal static string txtCamberStepSize {
            get {
                return ResourceManager.GetString("txtCamberStepSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sets the chord used during export. ähnelt.
        /// </summary>
        internal static string txtChord {
            get {
                return ResourceManager.GetString("txtChord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the number of points on the bottom bezier curve. ähnelt.
        /// </summary>
        internal static string txtNumOfPointBottom {
            get {
                return ResourceManager.GetString("txtNumOfPointBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the number of points on the top bezier curve. ähnelt.
        /// </summary>
        internal static string txtNumOfPointsTop {
            get {
                return ResourceManager.GetString("txtNumOfPointsTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the step size at which the thickness line is calculated. ähnelt.
        /// </summary>
        internal static string txtThicknessStepSize {
            get {
                return ResourceManager.GetString("txtThicknessStepSize", resourceCulture);
            }
        }
    }
}
